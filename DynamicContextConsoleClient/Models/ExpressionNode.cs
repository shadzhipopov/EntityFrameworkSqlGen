// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;

namespace DynamicContextConsoleClient.Models
{
    public partial class ExpressionNode
    {
        public ExpressionNode()
        {
            InverseInOperatorNodeNodeToCheck = new HashSet<ExpressionNode>();
            InverseNodeToCheck = new HashSet<ExpressionNode>();
            InverseParent = new HashSet<ExpressionNode>();
            InverseQuery = new HashSet<ExpressionNode>();
            InverseRoot = new HashSet<ExpressionNode>();
            MetadataItemPathRelations = new HashSet<MetadataItemPathRelation>();
        }

        public Guid Id { get; set; }
        public Guid? QueryId { get; set; }
        public int ExecutionOrder { get; set; }
        public Guid? ParentId { get; set; }
        public string UserDefinedAlias { get; set; }
        public Guid? RootId { get; set; }
        public Guid BusinessObjectExpressionId { get; set; }
        public bool IsAddedBySystem { get; set; }
        public string NodeType { get; set; }
        public string EnumType { get; set; }
        public string SelectedEnumValue { get; set; }
        public int? ConstantType { get; set; }
        public string Value { get; set; }
        public Guid? EnumerationTypeId { get; set; }
        public Guid? EnumerationValueId { get; set; }
        public Guid? TargetObjectId { get; set; }
        public Guid? BusinessPropertyId { get; set; }
        public bool? IncludeTimePart { get; set; }
        public int? ComparisonOperator { get; set; }
        public int? Operator { get; set; }
        public Guid? NodeToCheckId { get; set; }
        public int? ValueToCheck { get; set; }
        public int? Operation { get; set; }
        public string FunctionName { get; set; }
        public bool? DistinctValues { get; set; }
        public Guid? CountPropertyId { get; set; }
        public Guid? CountObjectId { get; set; }
        public bool? CountAll { get; set; }
        public int? ValuesSource { get; set; }
        public Guid? InOperatorNodeNodeToCheckId { get; set; }
        public int? LogicalOperator { get; set; }
        public int? OrderDirection { get; set; }
        public int? QueryType { get; set; }
        public Guid? FromId { get; set; }
        public bool IsDeleted { get; set; }

        public virtual BusinessObjectExpression BusinessObjectExpression { get; set; }
        public virtual BusinessProperty BusinessProperty { get; set; }
        public virtual BusinessObject CountObject { get; set; }
        public virtual BusinessProperty CountProperty { get; set; }
        public virtual EnumerationType EnumerationType { get; set; }
        public virtual EnumerationValue EnumerationValue { get; set; }
        public virtual BusinessObject From { get; set; }
        public virtual ExpressionNode InOperatorNodeNodeToCheck { get; set; }
        public virtual ExpressionNode NodeToCheck { get; set; }
        public virtual ExpressionNode Parent { get; set; }
        public virtual ExpressionNode Query { get; set; }
        public virtual ExpressionNode Root { get; set; }
        public virtual BusinessObject TargetObject { get; set; }
        public virtual ICollection<ExpressionNode> InverseInOperatorNodeNodeToCheck { get; set; }
        public virtual ICollection<ExpressionNode> InverseNodeToCheck { get; set; }
        public virtual ICollection<ExpressionNode> InverseParent { get; set; }
        public virtual ICollection<ExpressionNode> InverseQuery { get; set; }
        public virtual ICollection<ExpressionNode> InverseRoot { get; set; }
        public virtual ICollection<MetadataItemPathRelation> MetadataItemPathRelations { get; set; }
    }
}